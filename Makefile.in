@S9XDEBUGGER@
@S9XNETPLAY@
@S9XZIP@
@S9XJMA@

# Fairly good and special-char-safe descriptor of the os being built on.
OS         = `uname -s -r -m|sed \"s/ /-/g\"|tr \"[A-Z]\" \"[a-z]\"|tr \"/()\" \"___\"`
BUILDDIR   = .

## toggle here between debug (C++) and release (ASM) spc700 cores
SPC700 = wapu/spc700/spc700a.o 
#SPC700 = wapu/spc700/debug/spc700.o 

## currently disabled
# movie.o snapshot.o

OBJECTS    = wapu/apu.o wapu/soundux.o $(SPC700) bsx.o c4.o c4emu.o cheats.o cheats2.o clip.o conffile.o controls.o cpu.o cpuexec.o cpuops.o crosshairs.o dma.o dsp.o dsp1.o dsp2.o dsp3.o dsp4.o fxinst.o fxemu.o gfx.o globals.o logger.o memmap.o obc1.o ppu.o stream.o sa1.o sa1cpu.o screenshot.o sdd1.o sdd1emu.o seta.o seta010.o seta011.o seta018.o snes9x.o spc7110.o srtc.o tile.o filter/2xsai.o filter/blit.o filter/epx.o filter/hq2x.o filter/snes_ntsc.o statemanager.o ogl/snes9-rpi.o sdl/sdlinput.o sdl/sdlaudio.o ogl/oglvideo.o
DEFS       = -DMITSHM

ifdef S9XDEBUGGER
OBJECTS   += debug.o fxdbg.o
endif

ifdef S9XNETPLAY
OBJECTS   += netplay.o server.o
endif

ifdef S9XZIP
OBJECTS   += loadzip.o unzip/ioapi.o unzip/unzip.o
endif

ifdef S9XJMA
OBJECTS   += jma/7zlzma.o jma/crc32.o jma/iiostrm.o jma/inbyte.o jma/jma.o jma/lzma.o jma/lzmadec.o jma/s9x-jma.o jma/winout.o
endif

EXTRADEFS	= -DASM_SPC700

CCC        = @CXX@
CC         = @CC@
GASM       = @CXX@
INCLUDES   = -I. -I.. -Iunzip/ -Ijma/ -Ifilter/ -I/opt/vc/include -I/opt/vc/include/interface/vcos/pthreads

CCFLAGS    = @S9XFLGS@ @S9XDEFS@ $(DEFS) $(EXTRADEFS)
CFLAGS     = $(CCFLAGS) -Wno-strict-aliasing -Wno-variadic-macros -Wno-comment -I/usr/include/SDL

.SUFFIXES: .o .cpp .c .cc .h .m .i .s .obj

all: Makefile configure wapu/spc700 wapu/spc700/spc700a.o snes9x-rpi

Makefile: configure Makefile.in
	@echo "Makefile is older than configure or in-file. Run configure or touch Makefile."
	exit 1

configure: configure.ac
	@echo "configure is older than in-file. Run autoconf or touch configure."
	exit 1

wapu/spc700/spc700a.o: wapu/spc700/spc700a.s
	$(AS) wapu/spc700/spc700a.s -o $@

snes9x-rpi: $(OBJECTS)
	$(CCC) $(INCLUDES) -o $@ $(OBJECTS) -L/opt/vc/lib -Llibrpi2d -lrpi2d -lm -lGLESv2 -lEGL -lz -lpng -L/usr/lib/arm-linux-gnueabihf -lSDL

jma/s9x-jma.o: jma/s9x-jma.cpp
	$(CCC) $(INCLUDES) -c $(CCFLAGS) -fexceptions $*.cpp -o $@
jma/7zlzma.o: jma/7zlzma.cpp
	$(CCC) $(INCLUDES) -c $(CCFLAGS) -fexceptions $*.cpp -o $@
jma/crc32.o: jma/crc32.cpp
	$(CCC) $(INCLUDES) -c $(CCFLAGS) -fexceptions $*.cpp -o $@
jma/iiostrm.o: jma/iiostrm.cpp
	$(CCC) $(INCLUDES) -c $(CCFLAGS) -fexceptions $*.cpp -o $@
jma/inbyte.o: jma/inbyte.cpp
	$(CCC) $(INCLUDES) -c $(CCFLAGS) -fexceptions $*.cpp -o $@
jma/jma.o: jma/jma.cpp
	$(CCC) $(INCLUDES) -c $(CCFLAGS) -fexceptions $*.cpp -o $@
jma/lzma.o: jma/lzma.cpp
	$(CCC) $(INCLUDES) -c $(CCFLAGS) -fexceptions $*.cpp -o $@
jma/lzmadec.o: jma/lzmadec.cpp
	$(CCC) $(INCLUDES) -c $(CCFLAGS) -fexceptions $*.cpp -o $@
jma/winout.o: jma/winout.cpp
	$(CCC) $(INCLUDES) -c $(CCFLAGS) -fexceptions $*.cpp -o $@

.cpp.o:
	$(CCC) $(INCLUDES) -c $(CCFLAGS) $*.cpp -o $@

.c.o:
	$(CC) $(INCLUDES) -c $(CCFLAGS) $*.c -o $@

.cpp.S:
	$(GASM) $(INCLUDES) -S $(CCFLAGS) $*.cpp -o $@

.cpp.i:
	$(GASM) $(INCLUDES) -E $(CCFLAGS) $*.cpp -o $@

.S.o:
	$(GASM) $(INCLUDES) -c $(CCFLAGS) $*.S -o $@

.S.i:
	$(GASM) $(INCLUDES) -c -E $(CCFLAGS) $*.S -o $@

.s.o:
	@echo Compiling $*.s
	sh-elf-as -little $*.s -o $@

.obj.o:
	cp $*.obj $*.o

clean:
	rm -f $(OBJECTS)
